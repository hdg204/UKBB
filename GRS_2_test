curl https://www.chg.ox.ac.uk/~gav/resources/bgen_v1.1.4-Ubuntu16.04-x86_64.tgz > bgen.tgz
curl https://www.chg.ox.ac.uk/~gav/resources/qctool_v2.0.8-CentOS_Linux7.6.1810-x86_64.tgz > qctool.tgz
curl https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20231211.zip > plink.zip
curl https://s3.amazonaws.com/plink2-assets/plink2_linux_i686_20240625.zip > plink2.zip

tar -xvzf bgen.tgz
tar -xvzf qctool.tgz
unzip plink.zip
unzip plink2.zip

curl https://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2 > parallel-latest.tar.bz2
tar -xjf parallel-latest.tar.bz2
cd parallel-20240622
pwd
./configure --prefix=$HOME/.local
make
make install
export PATH=$HOME/.local/bin:$PATH
cd $home


dx download file-Gb53yZjJj59bVvzJZy28zK7V


alias bgenix='bgen_v1.1.4-Ubuntu16.04-x86_64/bgenix'
alias qctool='qctool_v2.0.8-CentOS\ Linux7.6.1810-x86_64/qctool'
alias plink='./plink'


process_chromosome() {
    i=$1
    grep -w "^$i" Prostate_Cancer_Conti_Score | awk '{print $2}' > bp${i}
    grep -wFf bp${i} "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c${i}_b0_v3.mfi.txt" | awk '{print $2}' > ids${i}
    bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c${i}_b0_v3.bgen" -incl-rsids ids${i} | qctool -g - -filetype bgen -og chr${i}.bed
}

export -f process_chromosome

# Use GNU parallel to run the function for each chromosome concurrently
seq 1 22 | parallel -j 4 process_chromosome

rm mergelist.txt
for i in `seq 1 22`
do
	echo chr${i} >> mergelist.txt
done

plink --merge-list mergelist.txt --make-bed --out merged_dataset
awk 'NR>2 {print $1, $1, 0, 0, 0, 0}' "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c1_b0_v3.sample" > merged_dataset.fam

./plink2 --bfile merged_dataset --set-all-var-ids @_# --make-bed --out merged_dataset_2
awk 'NR>1 {print $1"_"$2,$4,$5}' Prostate_Cancer_Conti_Score > plink_score
plink --bfile merged_dataset_2 --score plink_score 1 2 3 --out score































for i in `seq 1 1`
do
    grep -w "^$i" Prostate_Cancer_Conti_Score | awk '{print $2}' > bp${i}
    grep -wFf bp${i} "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c${i}_b0_v3.mfi.txt" | awk '{print $2}' > ids${i}
    bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c${i}_b0_v3.bgen" -incl-rsids ids${i} | qctool -g - -filetype bgen -og chr${i}.bed
done


bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c1_b0_v3.bgen" -incl-rsids ids1 | qctool -g - -filetype bgen -og chr1.bed







awk 'NR<4' chr1.vcf > vcf_all.vcf
for i in `seq 1 22`
do
	awk 'NR>3' chr${i}.vcf >> vcf_all.vcf
done

qctool chr1.vcf -g  --filetype vcf --og plink_all.bed
qctool -g vcf_all.vcf -og plink_all.bed

plink --vcf chr1.vcf --const-fid --freq
plink --vcf chr1.vcf --make-bed --out plink_chr1 --const-fid
plink --vcf vcf_all.vcf --make-bed --out plink_chr1 --const-fid





dx download file-Gb53yZjJj59bVvzJZy28zK7V

awk 'NR>1 {print $1":"$2"_"}' Prostate_Cancer_Conti_Score > coordinate


grep -w "^1" Prostate_Cancer_Conti_Score | awk '{print $2}' > bp

awk 'NR>1 {print $2}' Prostate_Cancer_Conti_Score > coordinate

grep -wF coordinate "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c1_b0_v3.mfi.txt"


while read -r line; do
    echo "$line" | awk '$1 ~ /i/ {print $2}'
done < Prostate_Cancer_Conti_Score

bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c1_b0_v3.bgen" -incl-rsids rsids | qctool -g - -filetype bgen -og plink${i}.bed

bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c1_b0_v3.bgen" -incl-range ranges | qctool -g - -filetype bgen -og plink${i}.bed



bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c1_b0_v3.bgen" -incl-range ranges | qctool -g - -filetype bgen -og plink${i}.bed

bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c1_b0_v3.bgen" -incl-rsids rs201106462 | qctool -g - -filetype bgen -og plink${i}.bed




for i in `seq 1 22`
do
    bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c${i}_b0_v3.bgen" -incl-rsids rsids | qctool -g - -filetype bgen -og plink${i}.bed
	./plink2 --bfile plink${i} --make-pgen --out plink${i}
	echo plink$i >> mergelist.txt
done





























dx download file-GZG13q8J71b15vpKY377jfxq
awk 'NR>2 {print $1, $1, 0, 0, 0, 0}' ukb22828_c1_b0_v3.sample > new_fam


for i in `seq 1 22`
do
    zcat /mnt/project/Bulk/Imputation/Imputation\ from\ genotype\ \(TOPmed\)/helper_files/ukb21007_c${i}_b0_v1.sites.vcf.gz | grep -wFf rsids | awk '{print $1":"$2"-"$2}'>>ranges
done


zcat /mnt/project/Bulk/Imputation/Imputation\ from\ genotype\ \(TOPmed\)/helper_files/ukb21007_c1_b0_v1.sites.vcf.gz | grep -wFf rsids | awk '{print $1":"$2"-"$2}'>>ranges

bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -incl-range chr1:204061234-204061234








bgenix -g /mnt/project/Bulk/Imputation/UKB\ imputation\ from\ genotype/ukb22828_c1_b0_v3.bgen -incl-rsids rsids | qctool -g - -filetype bgen -og example.bed







for i in `seq 1 22`
do
    bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c${i}_b0_v3.bgen" -incl-rsids rsids | qctool -g - -filetype bgen -og plink${i}.bed
	./plink2 --bfile plink${i} --make-pgen --out plink${i}
	echo plink$i >> mergelist.txt
done

zcat /mnt/project/Bulk/Imputation/Imputation\ from\ genotype\ \(TOPmed\)/helper_files/ukb21007_c1_b0_v1.sites.vcf.gz | grep 'rs138638958'
bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -incl-rsids rs138638958 | qctool -g - -filetype bgen -og topmed.bed

bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -incl-rsids rsids | qctool -g - -filetype bgen -og topmed.bed

for i in `seq 1 22`
do
    bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c${i}_b0_v1.bgen" -incl-rsids rsids | qctool -g - -filetype bgen -og topmed${i}.bed
	echo plink$i >> mergelist.txt
done









rstudio-server@83462b074d64:~$ zcat /mnt/project/Bulk/Imputation/Imputation\ from\ genotype\ \(TOPmed\)/helper_files/ukb21007_c1_b0_v1.sites.vcf.gz | grep 'rs138638958
> ^C
rstudio-server@83462b074d64:~$ zcat /mnt/project/Bulk/Imputation/Imputation\ from\ genotype\ \(TOPmed\)/helper_files/ukb21007_c1_b0_v1.sites.vcf.gz | grep 'rs138638958
> '
^C
rstudio-server@83462b074d64:~$ zcat /mnt/project/Bulk/Imputation/Imputation\ from\ genotype\ \(TOPmed\)/helper_files/ukb21007_c1_b0_v1.sites.vcf.gz | grep 'rs138638958'
^C
rstudio-server@83462b074d64:~$ zcat /mnt/project/Bulk/Imputation/Imputation\ from\ genotype\ \(TOPmed\)/helper_files/ukb21007_c1_b0_v1.sites.vcf.gz | grep 'rs138638958'
chr1    204061234       rs138638958     TTTTG   T       .       .       AF=0.462559;R2=0.984117;IMPUTED
rstudio-server@83462b074d64:~$ bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -list | grep '204061234'

Welcome to bgenix
(version: 1.1.4, revision 89c4456)

(C) 2009-2017 University of Oxford

Building query                                              :  (18361713/?,16.5s,1114295.7/s)
^C
rstudio-server@83462b074d64:~$ bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -list | grep '204061234'

Welcome to bgenix
(version: 1.1.4, revision 89c4456)

(C) 2009-2017 University of Oxford

Building query                                              :  (18361713/?,20.9s,877566.9/s)
.       .       chr1    204061234       2       T       G
.       .       chr1    204061234       2       TTTTG   T

Thank you for using bgenix.
rstudio-server@83462b074d64:~$ bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -incl-range chr1:204061234-204061234

Welcome to bgenix
(version: 1.1.4, revision 89c4456)

(C) 2009-2017 University of Oxford

Building query                                              :  (0/?,0.3s,0.0/s)
oobgen
Processing 0 variants                                       :  (0/?,0.0s,0.0/s)
bgenix: wrote data for 0 variants to stdout.

Thank you for using bgenix.
rstudio-server@83462b074d64:~$ bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -incl-range 1:204061233-204061235

Welcome to bgenix
(version: 1.1.4, revision 89c4456)

(C) 2009-2017 University of Oxford

Building query                                              :  (0/?,0.0s,0.0/s)
oobgen
Processing 0 variants                                       :  (0/?,0.0s,0.0/s)
bgenix: wrote data for 0 variants to stdout.

Thank you for using bgenix.
rstudio-server@83462b074d64:~$ bgenix -g "/mnt/project/Bulk/Imputation/Imputation from genotype (TOPmed)/ukb21007_c1_b0_v1.bgen" -incl-range chr1:204061233-204061235

Welcome to bgenix
(version: 1.1.4, revision 89c4456)

(C) 2009-2017 University of Oxford

Building query                                              :  (2/?,0.2s,11.9/s)










# Loop through each VCF file
for i in $(seq 1 22); do
    vcf_file="plink${i}.vcf"
    awk 'NR==FNR {a[$1]=$2" "$3; next} 
    {
        split($3, ids, ";"); 
        for (i in ids) {
            if (ids[i] in a) {
                split(a[ids[i]], alleles, " ");
                if ((($4 == alleles[1] && $5 == alleles[2]) || ($4 == alleles[2] && $5 == alleles[1]))) {
                    print
                }
            }
        }
    }' grs2_example $vcf_file >> filtered_plink_all.vcf
done




















awk 'NR==FNR {a[$1]=$2" "$3; next} 
{
    split($3, ids, ";"); 
    for (i in ids) {
        if (ids[i] in a) {
            split(a[ids[i]], alleles, " ");
            if ((($4 == alleles[1] && $5 == alleles[2]) || ($4 == alleles[2] && $5 == alleles[1]))) {
                print
            }
        }
    }
}' grs2_example plink8.vcf > filtered_plink8.vcf



for i in $(seq 1 $(wc -l < grs2_example)); do
    grep -Ff <(awk "NR==$i {print \$1}" grs2_example) plink8.vcf > temp_line.vcf
done






grep -Ff <(awk '{print $1}' grs2_example) plink8.vcf > filtered_plink8.vcf


cut -f 1-4 plink8.vcf

awk '{print $1}' grs2_example

grep 
'rs72725854'







# Extract SNP IDs and alleles from the external bim file
awk 'NR>1 {print $1, $2, $3}' grs2_example > snps_to_include_with_alleles.txt


awk '
    NR==FNR {
        a[$1] = $2","$3; 
        next
    }
    {
        if (($2 in a) && (($5 == substr(a[$2], 1, index(a[$2], ",") - 1) && $6 == substr(a[$2], index(a[$2], ",") + 1)) ||
                         ($6 == substr(a[$2], 1, index(a[$2], ",") - 1) && $5 == substr(a[$2], index(a[$2], ",") + 1))))
        print $2
    }' snps_to_include_with_alleles.txt plink8.bim > plink8_filtered_snps.txt






awk 'NR==FNR {a[$1][$2]=$3; next} ($2 in a) && (($5 in a[$2] && $6==a[$2][$5]) || ($6 in a[$2] && $5==a[$2][$6])) {print $2}' snps_to_include_with_alleles.txt plink8.bim > plink8_filtered_snps.txt
./plink --bfile $dataset --extract ${dataset}_filtered_snps.txt --make-bed --out ${dataset}_filtered

# Filter datasets based on exact matches
for dataset in dataset1 dataset2 dataset3; do
    awk 'NR==FNR {a[$1][$2]=$3; next} ($2 in a) && (($5 in a[$2] && $6==a[$2][$5]) || ($6 in a[$2] && $5==a[$2][$6])) {print $2}' snps_to_include_with_alleles.txt ${dataset}.bim > ${dataset}_filtered_snps.txt
    ./plink --bfile $dataset --extract ${dataset}_filtered_snps.txt --make-bed --out ${dataset}_filtered
done

# Create mergelist.txt
echo -e "dataset1_filtered\ndataset2_filtered\ndataset3_filtered" > mergelist.txt

# Merge the filtered datasets
./plink --merge-list mergelist.txt --make-bed --out merged_dataset
















for i in `seq 1 22`
do
    bgenix -g "/mnt/project/Bulk/Imputation/UKB imputation from genotype/ukb22828_c${i}_b0_v3.bgen" -incl-rsids rsids | qctool -g - -filetype bgen -og vcf${i}.vcf
done

Now I have vcfs I can remove duplicate rsids

for i in $(seq 1 $(wc -l < grs2_example))
do
    awk -v i="$i" 'NR==i {print $1,}' grs2_example
done



grep 'rs72725854' plink8.vcf

rs6983267



./plink2 --pmerge-list mergelist.txt --out merged

plink --merge-list mergelist.txt --out merged

./plink2 














bgenix -g /mnt/project/Bulk/Imputation/UKB\ imputation\ from\ genotype/ukb22828_c2_b0_v3.bgen -incl-rsids rsids | qctool -g - -filetype bgen -og example.bed





dx download file-Gb53yZjJj59bVvzJZy28zK7V
awk '{print $1":"$2"-"($2+1)}' Prostate_Cancer_Conti_Score


awk 'NR>1 {print $1":"($2-1)"-"($2+1)}' Prostate_Cancer_Conti_Score > bgenix_in


bgenix -g /mnt/project/Bulk/Imputation/UKB\ imputation\ from\ genotype/ukb22828_c1_b0_v3.bgen -incl-range bgenix_in | qctool -g - -filetype bgen -og example.bed


bgenix -g /mnt/project/Bulk/Imputation/UKB\ imputation\ from\ genotype/ukb22828_c1_b0_v3.bgen -incl-range 1:5743196-5743197 | qctool -g - -filetype bgen -og example.bed

head /mnt/project/Bulk/Imputation/UKB\ imputation\ from\ genotype/ukb22828_c1_b0_v3.mfi 



qctool -g /mnt/project/Bulk/Imputation/UKB\ imputation\ from\ genotype/ukb22828_c1_b0_v3.bgen -incl-position 1:5743196